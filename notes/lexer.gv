digraph Lexer {

  // Nodes
  start [shape="circle"]
  startSeenCR [shape="circle"]
  EOF [shape="doublecircle"]
  unexpectedChar [shape="doublecircle"]
  lparen [shape="doublecircle"]
  rparen [shape="doublecircle"]
  dot [shape="doublecircle"]
  comma [shape="doublecircle"]
  semi [shape="doublecircle"]
  question [shape="doublecircle"]
  lsquare [shape="doublecircle"]
  rsquare [shape="doublecircle"]
  lbrace [shape="doublecircle"]
  rbrace [shape="doublecircle"]
  tilde [shape="doublecircle"]
  colon [shape="doublecircle"]
  maybeBang [shape="circle"]
  maybeMod [shape="circle"]
  maybeStar [shape="circle"]
  maybeAssign [shape="circle"]
  maybeCaret [shape="circle"]
  bang [shape="doublecircle"]
  mod [shape="doublecircle"]
  star [shape="doublecircle"]
  assign [shape="doublecircle"]
  caret [shape="doublecircle"]
  notEqual [shape="doublecircle"]
  modAssign [shape="doublecircle"]
  mulAssign [shape="doublecircle"]
  equal [shape="doublecircle"]
  xorAssign [shape="doublecircle"]
  maybeAmp [shape="circle"]
  maybePipe [shape="circle"]
  maybeLand [shape="circle"]
  maybeLor [shape="circle"]
  bitAndAssign [shape="doublecircle"]
  bitOrAssign [shape="doublecircle"]
  amp [shape="doublecircle"]
  pipe [shape="doublecircle"]
  landAssign [shape="doublecircle"]
  lorAssign [shape="doublecircle"]
  land [shape="doublecircle"]
  lor [shape="doublecircle"]
  
  // Lines
  // Main
  start -> start [label="space, tab, newline"]
  start -> startSeenCR [label="carriage return"]
  startSeenCR -> start [label="newline"]
  startSeenCR -> start [label="push back 1"]
  start -> EOF [label="EOF"]
  start -> unexpectedChar
  start -> lparen [label="("]
  start -> rparen [label=")"]
  start -> dot [label="."]
  start -> comma [label=","]
  start -> semi [label=";"]
  start -> question [label="?"]
  start -> lsquare [label="["]
  start -> rsquare [label="]"]
  start -> lbrace [label="{"]
  start -> rbrace [label="}"]
  start -> tilde [label="~"]
  start -> colon [label=":"]
  start -> maybeBang [label="!"]
  start -> maybeMod [label="%"]
  start -> maybeStar [label="*"]
  start -> maybeAssign [label="="]
  start -> maybeCaret [label="^"]

  // symbol
  maybeBang -> bang [label="push back 1"]
  maybeMod -> mod [label="push back 1"]
  maybeStar -> star [label="push back 1"]
  maybeAssign -> assign [label="push back 1"]
  maybeCaret -> caret [label="push back 1"]
  maybeBang -> notEqual [label="="]
  maybeMod -> modAssign [label="="]
  maybeStar -> mulAssign [label="="]
  maybeAssign -> equal [label="="]
  maybeCaret -> xorAssign [label="="]
  start -> maybeAmp [label="&"]
  start -> maybePipe [label="|"]
  maybeAmp -> bitAndAssign [label="="]
  maybePipe -> bitOrAssign [label="="]
  maybeAmp -> amp [label="push back 1"]
  maybePipe -> pipe [label="push back 1"]
  maybeAmp -> maybeLand [label="&"]
  maybePipe -> maybeLor [label="|"]
  maybeLand -> land [label="push back 1"]
  maybeLor -> lor [label="push back 1"]
  maybeLand -> landAssign [label="="]
  maybeLor -> lorAssign [label="="]
}