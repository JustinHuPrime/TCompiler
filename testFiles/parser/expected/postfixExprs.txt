testFiles/parser/postfixExprs.tc (code):
FILE(1, 1, STAB(ENTRY(baz, FUNCTION(testFiles/parser/postfixExprs.tc, 7, 1, void(int, int))), ENTRY(s, STRUCT(testFiles/parser/postfixExprs.tc, 3, 1, FIELD(int, x), FIELD(int, y))), ENTRY(bar, FUNCTION(testFiles/parser/postfixExprs.tc, 9, 1, void(s *)))), MODULE(1, 1, ID(1, 8, foo, REFERENCES())), STRUCTDECL(3, 1, ID(3, 8, s, REFERENCES(testFiles/parser/postfixExprs.tc, 3, 1)), VARDECL(4, 3, KEYWORDTYPE(4, 3, int), ID(4, 7, x, REFERENCES()), ID(4, 10, y, REFERENCES()))), FUNDEFN(7, 1, KEYWORDTYPE(7, 1, void), ID(7, 6, baz, REFERENCES(testFiles/parser/postfixExprs.tc, 7, 1)), KEYWORDTYPE(7, 10, int), KEYWORDTYPE(7, 17, int), ID(7, 14, x, REFERENCES()), ID(7, 21, y, REFERENCES()), STAB(ENTRY(y, VARIABLE(testFiles/parser/postfixExprs.tc, 7, 17, int)), ENTRY(x, VARIABLE(testFiles/parser/postfixExprs.tc, 7, 10, int))), COMPOUNDSTMT(7, 24, STAB())), FUNDEFN(9, 1, KEYWORDTYPE(9, 1, void), ID(9, 6, bar, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 1)), MODIFIEDTYPE(9, 10, POINTER, ID(9, 10, s, REFERENCES(testFiles/parser/postfixExprs.tc, 3, 1))), ID(9, 13, p, REFERENCES()), STAB(ENTRY(p, VARIABLE(testFiles/parser/postfixExprs.tc, 9, 10, s *))), COMPOUNDSTMT(9, 16, STAB(ENTRY(v, VARIABLE(testFiles/parser/postfixExprs.tc, 10, 5, s)), ENTRY(b, VARIABLE(testFiles/parser/postfixExprs.tc, 17, 8, bool))), VARDEFNSTMT(10, 3, ID(10, 3, s, REFERENCES(testFiles/parser/postfixExprs.tc, 3, 1)), ID(10, 5, v, REFERENCES(testFiles/parser/postfixExprs.tc, 10, 5))), EXPRESSIONSTMT(11, 3, FUNCALLEXP(11, 3, ID(11, 3, bar, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 1)), ID(11, 7, p, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 10)))), EXPRESSIONSTMT(12, 3, FUNCALLEXP(12, 3, ID(12, 3, baz, REFERENCES(testFiles/parser/postfixExprs.tc, 7, 1)), BINOPEXP(12, 7, FIELD, ID(12, 7, v, REFERENCES(testFiles/parser/postfixExprs.tc, 10, 5)), ID(12, 9, x, REFERENCES())), BINOPEXP(12, 12, PTRFIELD, ID(12, 12, p, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 10)), ID(12, 15, y, REFERENCES())))), EXPRESSIONSTMT(13, 3, BINOPEXP(13, 3, ARRAY, ID(13, 3, p, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 10)), LITERAL(13, 5, UBYTE(1)))), EXPRESSIONSTMT(14, 3, UNOPEXP(14, 3, POSTDEC, UNOPEXP(14, 3, POSTINC, ID(14, 3, p, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 10))))), EXPRESSIONSTMT(15, 3, UNOPEXP(15, 3, NEGASSIGN, BINOPEXP(15, 3, PTRFIELD, ID(15, 3, p, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 10)), ID(15, 6, x, REFERENCES())))), EXPRESSIONSTMT(16, 3, UNOPEXP(16, 3, BITNOTASSIGN, BINOPEXP(16, 3, PTRFIELD, ID(16, 3, p, REFERENCES(testFiles/parser/postfixExprs.tc, 9, 10)), ID(16, 6, x, REFERENCES())))), VARDEFNSTMT(17, 3, KEYWORDTYPE(17, 3, bool), ID(17, 8, b, REFERENCES(testFiles/parser/postfixExprs.tc, 17, 8))), EXPRESSIONSTMT(18, 3, UNOPEXP(18, 3, LNOTASSIGN, ID(18, 3, b, REFERENCES(testFiles/parser/postfixExprs.tc, 17, 8)))))))
