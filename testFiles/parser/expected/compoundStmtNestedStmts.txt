testFiles/parser/input/compoundStmtNestedStmts.tc (code):
FILE(1, 1, STAB(ENTRY(bar, FUNCTION(testFiles/parser/input/compoundStmtNestedStmts.tc, 3, 1, void()))), MODULE(1, 1, ID(1, 8, foo, REFERENCES())), FUNDEFN(3, 1, KEYWORDTYPE(3, 1, void), ID(3, 6, bar, REFERENCES(testFiles/parser/input/compoundStmtNestedStmts.tc, 3, 1)), STAB(), COMPOUNDSTMT(3, 12, STAB(ENTRY(i, VARIABLE(testFiles/parser/input/compoundStmtNestedStmts.tc, 7, 7, int)), ENTRY(c, VARIABLE(testFiles/parser/input/compoundStmtNestedStmts.tc, 11, 8, char))), COMPOUNDSTMT(4, 3, STAB(ENTRY(b, VARIABLE(testFiles/parser/input/compoundStmtNestedStmts.tc, 5, 10, bool))), VARDEFNSTMT(5, 5, KEYWORDTYPE(5, 5, bool), ID(5, 10, b, REFERENCES(testFiles/parser/input/compoundStmtNestedStmts.tc, 5, 10)), LITERAL(5, 14, BOOL(true)))), VARDEFNSTMT(7, 3, KEYWORDTYPE(7, 3, int), ID(7, 7, i, REFERENCES(testFiles/parser/input/compoundStmtNestedStmts.tc, 7, 7)), LITERAL(7, 11, UBYTE(0))), COMPOUNDSTMT(8, 3, STAB(ENTRY(p, VARIABLE(testFiles/parser/input/compoundStmtNestedStmts.tc, 9, 11, void *))), VARDEFNSTMT(9, 5, MODIFIEDTYPE(9, 5, POINTER, KEYWORDTYPE(9, 5, void)), ID(9, 11, p, REFERENCES(testFiles/parser/input/compoundStmtNestedStmts.tc, 9, 11)), LITERAL(9, 15, NULL()))), VARDEFNSTMT(11, 3, KEYWORDTYPE(11, 3, char), ID(11, 8, c, REFERENCES(testFiles/parser/input/compoundStmtNestedStmts.tc, 11, 8)), LITERAL(11, 12, CHAR('a'))), COMPOUNDSTMT(12, 3, STAB(ENTRY(s, VARIABLE(testFiles/parser/input/compoundStmtNestedStmts.tc, 13, 11, char *))), VARDEFNSTMT(13, 5, MODIFIEDTYPE(13, 5, POINTER, KEYWORDTYPE(13, 5, char)), ID(13, 11, s, REFERENCES(testFiles/parser/input/compoundStmtNestedStmts.tc, 13, 11)), LITERAL(13, 15, STRING(str)))))))
