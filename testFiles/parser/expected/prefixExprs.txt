testFiles/parser/prefixExprs.tc (code):
FILE(1, 1, STAB(ENTRY(bar, FUNCTION(testFiles/parser/prefixExprs.tc, 3, 1, void(int *, bool, int)))), MODULE(1, 1, ID(1, 8, foo, REFERENCES())), FUNDEFN(3, 1, KEYWORDTYPE(3, 1, void), ID(3, 6, bar, REFERENCES(testFiles/parser/prefixExprs.tc, 3, 1)), MODIFIEDTYPE(3, 10, POINTER, KEYWORDTYPE(3, 10, int)), KEYWORDTYPE(3, 18, bool), KEYWORDTYPE(3, 26, int), ID(3, 15, i, REFERENCES()), ID(3, 23, b, REFERENCES()), ID(3, 30, j, REFERENCES()), STAB(ENTRY(b, VARIABLE(testFiles/parser/prefixExprs.tc, 3, 18, bool)), ENTRY(i, VARIABLE(testFiles/parser/prefixExprs.tc, 3, 10, int *)), ENTRY(j, VARIABLE(testFiles/parser/prefixExprs.tc, 3, 26, int))), COMPOUNDSTMT(3, 33, STAB(), EXPRESSIONSTMT(4, 3, UNOPEXP(4, 3, DEREF, UNOPEXP(4, 4, ADDROF, UNOPEXP(4, 5, PREINC, UNOPEXP(4, 7, PREDEC, ID(4, 9, i, REFERENCES(testFiles/parser/prefixExprs.tc, 3, 10))))))), EXPRESSIONSTMT(5, 3, UNOPEXP(5, 3, LNOT, ID(5, 4, b, REFERENCES(testFiles/parser/prefixExprs.tc, 3, 18)))), EXPRESSIONSTMT(6, 3, UNOPEXP(6, 3, BITNOT, UNOPEXP(6, 4, NEG, ID(6, 5, j, REFERENCES(testFiles/parser/prefixExprs.tc, 3, 26))))))))
